{"version":3,"sources":["Components/Main/MainStyle.js","Components/Main/Main.jsx","Components/Pages/Styles.js","Components/Pages/Students/model.js","Components/Pages/Cohorts/model.js","constants/constants.js","Components/Pages/Students/Students.jsx","Components/Pages/Cohorts/Cohorts.jsx","Components/Popup/PopupTheme.js","Components/Popup/Popup.jsx","Components/PopupContent/PopupContentStyle.js","Components/PopupContent/DeleteDataWarning.jsx","Components/PopupContent/AddingForm.jsx","App.js","reportWebVitals.js","index.js"],"names":["MainStyle","makeStyles","theme","root","display","width","appBar","zIndex","drawer","flexShrink","drawerPaper","drawerContainer","overflow","content","flexGrow","padding","spacing","Main","classes","className","CssBaseline","AppBar","position","Toolbar","Typography","variant","noWrap","Drawer","paper","List","map","text","index","to","ListItem","button","ListItemIcon","ListItemText","primary","path","exact","component","Students","Cohorts","Styles","table","minWidth","control","justifyContent","marginBottom","controlGroup","gridTemplateColumns","gap","alignItems","controlLabel","fontSize","alignSelf","addButton","selectEmpty","selectMenu","tableRow","addStudent","createEvent","deleteStudent","patchStudent","$students","createStore","id","last_name","first_name","mid_name","date_of_birth","cohort_number","on","oldData","data","filter","item","setStudentData","resetStudentData","$studentData","_","reset","addCohort","deleteCohort","patchCohort","$cohorts","faculty","setCohortData","resetCohortData","$cohortData","Math","round","random","setCohortsNumbers","$cohortsNumbers","num","cohortsFormData","studentsFormData","students","useStore","studentData","useState","setFilter","studentId","setStudentId","setButton","open","setOpen","handleOpen","btn","handleClose","FormControl","formControl","Select","value","onChange","target","sort","prev","next","displayEmpty","MenuItem","Button","color","onClick","Divider","TableContainer","Table","TableHead","TableRow","header","TableCell","align","Object","keys","toString","values","TableBody","student","i","IconButton","close","accept","formData","handleChange","setData","handlePushData","cohorts","cohortData","cohortsNumbers","cohortId","setCohortId","cohort","required","InputLabel","useStyles","modal","backgroundColor","palette","background","borderRadius","Popup","children","Dialog","onClose","DialogContent","PopupContentStyle","flexDirection","field","buttonsGroup","marginTop","marginRight","boxShadow","DeleteDataWarning","AddingForm","props","valid","setValid","useEffect","obj","Map","entries","noValidate","autoComplete","label","TextField","type","disabled","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0535f39.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 240;\n\nexport const MainStyle = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    width: '100%',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerContainer: {\n    overflow: 'auto',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n}));","import { Route, Link } from 'react-router-dom';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport { MainStyle } from './MainStyle';\nimport { Students, Cohorts } from '../';\n\nexport const Main = () => {\n  const classes = MainStyle();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar position='fixed' className={classes.appBar}>\n        <Toolbar>\n          <Typography variant='h6' noWrap>\n            Информационная система\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant='permanent'\n        classes={{\n          paper: classes.drawerPaper,\n        }}>\n        <Toolbar />\n        <div className={classes.drawerContainer}>\n          <List>\n            {['Студенты', 'Группы'].map((text, index) => (\n              <Link to={text === 'Студенты' ? '/' : 'cohorts'} key={text}>\n                <ListItem button>\n                  <ListItemIcon>\n                    {index % 2 === 0 ? <PeopleAltIcon /> : <ViewListIcon />}\n                  </ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              </Link>\n            ))}\n          </List>\n        </div>\n      </Drawer>\n      <main className={classes.content}>\n        <Toolbar />\n        <Route path='/' exact component={Students} />\n        <Route path='/cohorts' component={Cohorts} />\n      </main>\n    </div>\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport const Styles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  table: {\n    minWidth: 750,\n  },\n  control: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    marginBottom: '10px',\n  },\n  controlGroup: {\n    display: 'grid',\n    gridTemplateColumns: 'auto auto',\n    gap: '10px',\n    alignItems: 'center',\n  },\n  controlLabel: {\n    fontSize: '14px',\n    alignSelf: 'center',\n  },\n  addButton: {\n    fontSize: '14px',\n  },\n  selectEmpty: {\n    fontSize: '14px',\n    padding: '2px',\n  },\n  selectMenu: {\n    fontSize: '14px',\n  },\n  tableRow: {\n    padding: theme.spacing(1),\n  },\n}));","import { createStore, createEvent } from 'effector';\n\nexport const addStudent = createEvent();\nexport const deleteStudent = createEvent();\nexport const patchStudent = createEvent();\nexport const $students = createStore([\n  {\n    id: 1234,\n    last_name: 'Иванов',\n    first_name: 'Иван',\n    mid_name: 'Иванович',\n    date_of_birth: '01.02.2005',\n    cohort_number: 401,\n  },\n  {\n    id: 5678,\n    last_name: 'Петров',\n    first_name: 'Петр',\n    mid_name: 'Петрович',\n    date_of_birth: '02.03.2004',\n    cohort_number: 101,\n  },\n])\n  .on(addStudent, (oldData, data) => [...oldData, data])\n  .on(deleteStudent, (oldData, data) => [\n    ...oldData.filter((item) => item.last_name !== data),\n  ])\n  .on(patchStudent, (oldData, data) =>\n    [...oldData.map((item) => item.id === data.id ? data : item)]\n  );\n\nexport const setStudentData = createEvent();\nexport const resetStudentData = createEvent();\nexport const $studentData = createStore(\n  {\n    id: '',\n    last_name: '',\n    first_name: '',\n    mid_name: '',\n    date_of_birth: '',\n    cohort_number: '',\n  }\n)\n.on(setStudentData, (_, data) => data)\n.reset(resetStudentData);","import { createStore, createEvent } from 'effector';\n\nexport const addCohort = createEvent();\nexport const deleteCohort = createEvent();\nexport const patchCohort = createEvent();\nexport const $cohorts = createStore([\n  {\n    id: 1001,\n    faculty: 'Физико-математический',\n    cohort_number: 101,\n  },\n])\n  .on(addCohort, (oldData, data) => [...oldData, data])\n  .on(deleteCohort, (oldData, data) => [\n    ...oldData.filter((item) => item.id !== data),\n  ])\n  .on(patchCohort, (oldData, data) => [\n    ...oldData.map((item) => (item.id === data.id ? data : item)),\n  ]);\n\nexport const setCohortData = createEvent();\nexport const resetCohortData = createEvent();\nexport const $cohortData = createStore({\n  id: Math.round(Math.random() * 100000),\n  faculty: '',\n  cohort_number: '',\n})\n  .on(setCohortData, (_, data) => data)\n  .reset(resetCohortData);\n\nexport const setCohortsNumbers = createEvent();\nexport const $cohortsNumbers = createStore([101, 201, 301, 401, 501])\n  .on(setCohortsNumbers, (oldData, num) => [...oldData, num]);\n","export const cohortsFormData = [\n  {cohort_number: '№ группы'},\n  {faculty: 'Факультет'},\n]\n\nexport const studentsFormData = [\n  {last_name: 'Фамилия'},\n  {first_name: 'Имя'},\n  {mid_name: 'Отчество'},\n  {date_of_birth: 'Дата рождения'},\n  {cohort_number: 'Группа №'}\n]","import { Styles } from '../Styles';\n\nimport { useState } from 'react';\nimport { useStore } from 'effector-react';\n\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport { Divider, Table } from '@material-ui/core';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport {\n  $students,\n  addStudent,\n  deleteStudent,\n  $studentData,\n  resetStudentData,\n  setStudentData,\n  patchStudent,\n} from './model';\nimport { setCohortsNumbers } from '../Cohorts/model';\n\nimport { Popup } from '../..';\nimport { DeleteDataWarning, AddingForm } from '../..';\nimport { studentsFormData } from '../../../constants/constants';\n\nexport const Students = () => {\n  const classes = Styles();\n  \n  const students = useStore($students);\n  const studentData = useStore($studentData);\n\n  const [filter, setFilter] = useState('');\n  const [studentId, setStudentId] = useState(null);\n  const [button, setButton] = useState(null);\n  const [open, setOpen] = useState(false);\n\n  const handleChange = ({ target }) => {\n    setFilter(target.value);\n    target.value === 'Группа' &&\n      students.sort((prev, next) => prev.cohort_number - next.cohort_number);\n    target.value === 'Фамилия' &&\n      students.sort((prev, next) => {\n        if (prev.last_name > next.last_name) return 1;\n        if (prev.last_name < next.last_name) return -1;\n        return 0;\n      });\n  };\n\n  const handleOpen = (btn) => {\n    setOpen(true);\n    setButton(btn)\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    resetStudentData();\n  };\n\n  const handleDeleteData = () => {\n    deleteStudent(studentId);\n    setOpen(false);\n  }\n\n  const handleFormChange = ({ target }) => {\n    switch (target.id) {\n      case 'Фамилия':\n        setStudentData({ ...studentData, last_name: target.value });\n        break;\n      case 'Имя':\n        setStudentData({ ...studentData, first_name: target.value });\n        break;\n      case 'Отчество':\n        setStudentData({ ...studentData, mid_name: target.value });\n        break;\n      case 'Дата рождения':\n        setStudentData({ ...studentData, date_of_birth: target.value });\n        break;\n      case 'Группа №':\n        setStudentData({ ...studentData, cohort_number: target.value });\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleDataSend = () => {\n    setStudentData({ ...studentData, id: Math.round(Math.random()*100000)})\n    addStudent(studentData);\n    setCohortsNumbers(studentData.cohort_number)\n    setOpen(false);\n    resetStudentData();\n  };\n\n  const handleDataPatch = () => {\n    patchStudent(studentData);\n    setOpen(false);\n    resetStudentData();\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.control}>\n        <div className={classes.controlGroup}>\n          <FormControl className={classes.formControl}>\n            <Select\n              value={filter}\n              onChange={handleChange}\n              displayEmpty\n              className={classes.selectEmpty}>\n              <MenuItem className={classes.selectMenu} value={''}>\n                Сортировать\n              </MenuItem>\n              <MenuItem className={classes.selectMenu} value={'Фамилия'}>\n                По фамилии\n              </MenuItem>\n              <MenuItem className={classes.selectMenu} value={'Группа'}>\n                По группе\n              </MenuItem>\n            </Select>\n          </FormControl>\n        </div>\n        <Button\n          className={classes.addButton}\n          variant='outlined'\n          color='primary'\n          onClick={() => {\n            handleOpen('add');\n          }}>\n          Добавить\n        </Button>\n      </div>\n      <Divider />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {studentsFormData.map((header) => (\n                <TableCell\n                  align={\n                    Object.keys(header).toString() === 'cohort_number' ||\n                    Object.keys(header).toString() === 'date_of_birth'\n                      ? 'center'\n                      : 'left'\n                  }\n                  key={Object.keys(header)}>\n                  {Object.values(header)}\n                </TableCell>\n              ))}\n              <TableCell align='center'></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {students.map((student, i) => (\n              <TableRow className={classes.tableRow} key={i}>\n                <TableCell className={classes.tableRow} align='left'>{student.last_name}</TableCell>\n                <TableCell className={classes.tableRow} align='left'>{student.first_name}</TableCell>\n                <TableCell className={classes.tableRow} align='left'>{student.mid_name}</TableCell>\n                <TableCell className={classes.tableRow} align='center'>{student.date_of_birth}</TableCell>\n                <TableCell className={classes.tableRow} align='center'>{student.cohort_number}</TableCell>\n                <TableCell className={classes.tableRow} align='center'>\n                  <IconButton\n                    aria-label='edit'\n                    onClick={() => {\n                      handleOpen('edit');\n                      setStudentData(student);\n                      setOpen(true);\n                    }}>\n                    <EditIcon />\n                  </IconButton>\n                  <IconButton\n                    aria-label='delete'\n                    onClick={() => {\n                      handleOpen('delete');\n                      setStudentId(student.last_name);\n                    }}>\n                    <DeleteIcon />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Popup open={open} close={handleClose}>\n        {button === 'delete' && (\n          <DeleteDataWarning\n            close={handleClose}\n            accept={handleDeleteData}\n            text='Данные студента будут удалены. Продолжить?'\n          />\n        )}\n\n        {(button === 'add' || button === 'edit') && (\n          <AddingForm\n            close={handleClose}\n            formData={studentsFormData}\n            handleChange={handleFormChange}\n            data={studentData}\n            setData={setStudentData}\n            handlePushData={button === 'add' ? handleDataSend : handleDataPatch}\n          />\n        )}\n      </Popup>\n    </div>\n  );\n};\n","import { Styles } from '../Styles';\n\nimport { useState } from 'react';\nimport { useStore } from 'effector-react';\n\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport { Divider, Table } from '@material-ui/core';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport {\n  $cohorts,\n  addCohort,\n  deleteCohort,\n  $cohortData,\n  setCohortData,\n  resetCohortData,\n  patchCohort,\n  $cohortsNumbers,\n} from './model';\n\nimport { Popup } from '../..';\nimport { DeleteDataWarning, AddingForm } from '../..';\nimport { cohortsFormData } from '../../../constants/constants';\n\nexport const Cohorts = () => {\n  const classes = Styles();\n  \n  const cohorts = useStore($cohorts);\n  const cohortData = useStore($cohortData);\n  const cohortsNumbers = useStore($cohortsNumbers);\n\n  const [cohortId, setCohortId] = useState(null);\n  const [button, setButton] = useState(null);\n\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = (btn) => {\n    setOpen(true);\n    setButton(btn)\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    resetCohortData();\n  };\n\n  const handleDeleteData = () => {\n    deleteCohort(cohortId);\n    setOpen(false);\n  }\n\n  const handleFormChange = ({ target }) => {\n    switch (target.id) {\n      case 'Факультет':\n        setCohortData({ ...cohortData, faculty: target.value });\n        break;\n      case 'Номер группы':\n        setCohortData({ ...cohortData, cohort_number: target.value });\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleDataSend = () => {\n    setCohortData({ ...cohortData, id: Math.round(Math.random()*100000)})\n    addCohort(cohortData);\n    setOpen(false);\n    resetCohortData();\n  };\n\n  const handleDataPatch = () => {\n    patchCohort(cohortData);\n    setOpen(false);\n    resetCohortData();\n  };\n\n  const handleSelectChange = ({ target }) => {\n    setCohortData({ ...cohortData, cohort_number: +target.value });\n  };\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.control}>\n        <div className={classes.controlGroup}></div>\n        <Button\n          className={classes.addButton}\n          variant='outlined'\n          color='primary'\n          onClick={() => {\n            handleOpen('add');\n          }}>\n          Добавить\n        </Button>\n      </div>\n      <Divider />\n      <TableContainer>\n        <Table>\n          <TableHead>\n            <TableRow>\n              {cohortsFormData.map((header) => (\n                <TableCell align='center' key={Object.keys(header)}>\n                  {Object.values(header)}\n                </TableCell>\n              ))}\n              <TableCell align='center'></TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {cohorts.map((cohort) => (\n              <TableRow className={classes.tableRow} key={cohort.id}>\n                <TableCell align='center'>{cohort.cohort_number}</TableCell>\n                <TableCell align='center'>{cohort.faculty}</TableCell>\n                <TableCell align='center'>\n                  <IconButton\n                    aria-label='edit'\n                    onClick={() => {\n                      handleOpen('edit');\n                      setCohortData(cohort);\n                      setOpen(true);\n                    }}>\n                    <EditIcon />\n                  </IconButton>\n                  <IconButton\n                    aria-label='delete'\n                    onClick={() => {\n                      handleOpen('delete');\n                      setCohortId(cohort.id);\n                    }}>\n                    <DeleteIcon />\n                  </IconButton>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Popup open={open} close={handleClose}>\n        {button === 'delete' && (\n          <DeleteDataWarning\n            close={handleClose}\n            accept={handleDeleteData}\n            text='Данные группы будут удалены. Продолжить?'\n          />\n        )}\n        {(button === 'add' || button === 'edit') && (\n          <AddingForm\n            close={handleClose}\n            formData={[{faculty: 'Факультет'}]}\n            handleChange={handleFormChange}\n            data={cohortData}\n            setData={setCohortData}\n            handlePushData={button === 'add' ? handleDataSend : handleDataPatch}\n          >\n            <FormControl required className={classes.formControl}>\n              <InputLabel>Номер группы</InputLabel>\n              <Select value={cohortData.cohort_number} onChange={handleSelectChange}>\n                {cohortsNumbers.map((cohort) => (\n                  <MenuItem value={cohort} key={cohort}>\n                    {cohort}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n          </AddingForm>\n        )}\n      </Popup>\n    </div>\n  );\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: '4px',\n    padding: theme.spacing(2, 1.2, 3),\n  },\n}));","import React from 'react';\nimport { useStyles } from './PopupTheme';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nexport const Popup = ({ open, close, children }) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={close}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogContent>\n          <div className={classes.paper}>{children}</div>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n};\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const PopupContentStyle = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  field: {\n    marginBottom: '10px'\n  },\n  buttonsGroup: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: '20px',\n  },\n  button: {\n    minWidth: '100px',\n    fontSize: '12px',\n    marginRight: '20px',\n    boxShadow: 'none',\n    '&:hover': {\n      boxShadow: 'none'\n    },\n    '&:last-of-type': {\n      marginRight: '0',\n    }\n  }\n}))","import Button from '@material-ui/core/Button';\nimport { PopupContentStyle } from './PopupContentStyle';\n\nexport const DeleteDataWarning = ({ close, accept, text }) => {\n  const classes = PopupContentStyle();\n  return (\n    <>\n      <p>{text}</p>\n      <div className={classes.buttonsGroup}>\n        <Button\n          className={classes.button}\n          variant='contained'\n          color='primary'\n          onClick={accept}>\n          Удалить\n        </Button>\n        <Button\n          className={classes.button}\n          variant='contained'\n          color='primary'\n          onClick={close}>\n          Отмена\n        </Button>\n      </div>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\n\nimport { Button, TextField } from '@material-ui/core';\nimport { PopupContentStyle } from './PopupContentStyle';\n\nexport const AddingForm = (props) => {\n  const { close, formData, handleChange, data, handlePushData, children } =\n    props;\n\n  const classes = PopupContentStyle();\n\n  const [valid, setValid] = useState(false);\n\n  useEffect(() => {\n    const obj = new Map(Object.entries(data));\n    for (let item of obj.values()) {\n      setValid(!!item);\n    }\n  }, [data]);\n\n  const fieldType = (field) => {\n    if (field === 'date_of_birth') return 'date';\n    if (field === 'cohort_number') return 'number';\n    return 'text'\n  }\n\n  return (\n    <form className={classes.root} noValidate autoComplete='off'>\n      {formData.map((label, i) => (\n        <TextField\n          required\n          key={Object.values(label)}\n          value={data[Object.keys(label)]}\n          className={classes.field}\n          id={Object.values(label).toString()}\n          label={Object.values(label).toString() !== 'Дата рождения' && Object.values(label)}\n          onChange={handleChange}\n          type={fieldType(Object.keys(label).toString())}\n        />\n      ))}\n      {children}\n      <div className={classes.buttonsGroup}>\n        <Button\n          className={classes.button}\n          variant='contained'\n          color='primary'\n          onClick={handlePushData}\n          disabled={!valid}>\n          OK\n        </Button>\n        <Button\n          className={classes.button}\n          variant='contained'\n          color='primary'\n          onClick={close}>\n          Отменить\n        </Button>\n      </div>\n    </form>\n  );\n};\n","import './App.css';\n\nimport { Main } from './Components/';\n\nfunction App() {\n  return (\n    <div className='app'>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  // For gh-pages use HashRouter\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}